
오늘의 숙제 :

채팅버튼을 누르면 chatroom이라는 컬렉션에 document를 하나 발행해주십시오.

그리고 그 document 안에는 언제 만들었는지 참여자들의 uid가 어떻게 되는지의 정보가

저장되어있으면 성공입니다. 

 

 

채팅기능을 만들텐데 전에 해야할 일이 있습니다.

유저의 정보를 저장할 곳이 필요합니다.

가입시 이메일, 이름 저장되는건 Authentication 전용 DB 이런 곳에 저장되는거라

여러분이 유저에 대한 정보를 뭔가 추가로 저장하고 싶을 경우 거길 계속 이용할 순 없습니다.

유저가 언제 로그인 했는지

유저가 악성유저인지 

유저가 글을 몇개나 싸질렀는지

유저가 오늘 아침 밥은 먹었는지 어디다 저장할 것임 

 

가입한 유저정보 역시 Firestore DB에 저장하면 읽고쓰기 쉬워서 그거나 일단 같이 해봅시다.

그리고 앞으로 만들 채팅기능은 별거 없습니다 게시물 발행이랑 똑같습니다.
 

가입완료시 유저 정보를 Firestore DB에도 저장합시다

 

login.html에서 가입완료시 Firestore에 user 라는 컬렉션 안에 유저정보를 저장해봅시다.

document id는 유저의 uid로 만들어주고

document 안의 내용은 { name : 이름~ , email : 이메일~~ } 이렇게 생기면 좋겠군요.

이건 알아서 강의끄고 해보시길 바랍니다. 

 

저는 어떻게 했냐면
 

login.html에 있는 createUserWith 어쩌구 함수 안에 코드를 딱 두줄 추가했습니다.

 

var 이메일 = $('#email-new').val();
var 패스워드 = $('#pw-new').val();
var 이름 = $('#name-new').val();

firebase.auth().createUserWithEmailAndPassword(이메일, 패스워드).then((result)=>{
  var 유저정보 = { name : 이름, email : 이메일 }
  db.collection('user').doc(result.user.uid).set(유저정보)
})
 

 

createUserWith 어쩌구가 성공하면 

유저정보를 { } 이 안에 이쁘게 담아서

user라는 이름의 collection에 저장하라고 했습니다.

document id는 result.user.uid로 설정했습니다.

  
그래서 새로 가입해봤는데

에러1. 

크롬 콘솔창엔 displayName of null 어쩌구 에러가 발생한다면 

그것은 localStorage에 유저가 없으면 나는 에러같은데 그냥 

$('#userName').html(JSON.parse(뺀거).displayName)

이걸 잠깐 주석처리했다고 합니다. 
 
 
에러2. 

크롬콘솔창에 맨날 보이는 에런데 caller does not have permission 에러가 난다면 

user 라는 컬렉션의 접근 규칙 설정을 안해주셔서 그렇습니다.

Firebase console로 들어가셔서 Firestore 규칙란에 규칙을 추가하면 됩니다.

 



 

▲ 당연히 user 컬렉션 접근하다 permission 에러가 난 것이니 

user 컬렉션의 접근권한을 설정해줍니다.

저렇게 true로 하는 것 보다는 "지금 요청하는 사람의 uid가 지금 읽고 쓸 document id와 일치하면 create 허가해주셈"

이런 규칙을 짜는게 더 안전하겠군요. 심심하면 해보십시오.

 

 

[collapse]
 

 

 

아무튼 기존에 있던 kim@naver.com 계정은 console에서 계정 삭제하고

kim@naver.com으로 다시 가입해봤는데 

잘 가입이 되고 user 컬렉션에 이 유저의 정보도 저장이 됩니다. 성공 

 

 

 

 

채팅버튼 만들기

 

detail.html에 채팅버튼을 하나 집어넣었습니다.

<button class="btn btn-outline-secondary" id="chat">채팅</button>
이거 누르면 채팅하면 되는데 이거 기능 어떻게 개발할지 생각해보십시오.

 

 

 

채팅이 뭔지 정의부터 해야겠는데요?

그건 쉬운데 여러분이 웹상에서 기능개발하는 모든 것은 전부 게시물 발행이랑 똑같습니다.

감자게시물 발행해봤지않습니까 채팅도 똑같은 행위입니다.

html 로 보여주는 생김새는 다를 뿐 기능 짜는건 게시물 발행이랑 똑같음 

 

 

1. 채팅버튼 누르면 채팅방을 개설해줍니다. (채팅방 게시물 발행임)

2. 채팅방에서 메세지 전송을 할 수 있습니다 (메세지 게시물 발행임, 채팅방에 붙은 댓글이라고 보면 될듯)

이거 구현하면 채팅기능 끝인데

1번은 숙제로 해오시길 바랍니다. 

 

 

오늘의 숙제 :

채팅버튼을 누르면 chatroom이라는 컬렉션에 document를 하나 발행해주십시오.

그리고 그 document 안에는 언제 만들었는지 참여자들의 uid가 어떻게 되는지의 정보가

저장되어있으면 성공입니다. 