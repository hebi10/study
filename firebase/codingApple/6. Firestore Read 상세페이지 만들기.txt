
오늘의 숙제 : 

그럼 감자 페이지로 방문하면 감자 게시물의 제목, 가격이 html에 뜨도록 하려면 코드 어떻게 짜야할까요?

다다음시간에 알아봅시다. 

지금 index.html에는 상품들이 잘 보이는데

이걸 누르면 당근마켓처럼 상세페이지를 보여주도록 합시다. 

일단 detail.html 파일 만들어봅시다. 

내용은 그냥 기존 html 파일에 있던거 복붙하시고 필요없는 자바스크립트와 HTML 지워주면 됩니다.

그 다음에 하단 HTML CSS 코드를 복붙합시다 

detail.html 디자인
 
<div class="container">
    상세페이지임 
    <div class="detail-pic my-4" style="background-image: url('https://placeimg.com/640/380/tech');"></div>
    <div>
      <h5>올린사람 : 모름</h5>
      <hr>
      <h5 class="title">상품명</h5>
      <p class="date">올린날짜</p>
      <p class="price">가격</p>
    </div>
</div>
.detail-pic {
  width: 100%;
  height: 300px;
  background-size: cover;
  background-position: center;
} 
 

복붙 잘 했는데 왜 사진이 안보이거나 CSS 적용이 안되냐고요?

ctrl + shift + r로 새로고침하면 됩니다.

맥은 ctrl 대신 command 겠죠 

[collapse]
 
상품목록을 누르면 detail.html 페이지로 이동해야합니다.

index.html에 있는 상품목록 누르면 detail.html로 이동하게 코드짜십시오.

그냥 <a>태그 쓰면 링크를 만들 수 있으니 그거 씁시다. 

<h5 class="title"><a href="/detail.html"> ${doc.data().제목} </a></h5>
<a>태그로 감쌌습니다. 끗 

근데 잘 생각해보시면 

감자를 누르면 감자의 detail.html 로 가야하고

카메라를 누르면 카메라의 detail.html 로 가야하고

다른 HTML 페이지가 여러개 필요할 것 같은데요? 

실은 detail.html 하나 가지고 여러 페이지를 만들 수 있는데 그것은 query string을 쓰면 됩니다. 

Query string 설명시간 

주소창에 /detail.html 이렇게 적을 때 뒤에 무작위 문자를 기입할 수 있습니다. 

물음표만 치면 됩니다.

/detail.html?감자

/detail.html?카메라

이런 식으로 기입할 수 있습니다. 그럼 각각 감자 detail, 카메라 detail 페이지 같지 않습니까.

물음표 뒤에 붙는 문자를 query string이라고 하는데 이걸 쓰면 될듯요?

근데 query string 작명법은 정해져있습니다. 안따르면 큰일남 

/detail.html?상품명=감자
데이터이름=데이터값

마치 object 자료처럼 이름쓰고 값넣으셔야합니다. 

아무튼 이러면 페이지 여러개 생성할 수 있겠네요. 

그래서 

<h5 class="title"><a href="/detail.html?id=감자게시물id"> ${doc.data().제목} </a></h5>
index.html 내부를 이렇게 바꾸면 어떨까요. 

상품명은 중복이 생길 수 있으니까 유니크한 글의 id (document의 id) 를 활용해봅시다. 

id가 어딨냐고요? 

<h5 class="title"><a href="/detail.html?id=${doc.id}"> ${doc.data().제목} </a></h5>
구글이 이러면 document의 id가 나온다는데얌 

아무튼 그러면 이제

감자게시물을 누르면 /detail.html?id=감자게시물id

카메라게시물을 누르면 /detail.html?id=카메라게시물id 

로 이동합니다. 

▲ 진짜임 감자눌렀더니 여기로 이동함 

query string의 원래 용도
 

서버가 있다면

서버로 데이터를 몰래 전달하고싶을 때 query string을 사용합니다.

 

예를 들면 네이버에서 "사과"를 검색할 때 url이 이렇게 변할겁니다. 

/search.html?검색어=사과

대충 이런 느낌으로 변합니다.

유저가 사과 검색하고싶다는걸 네이버 서버로 전달할 때 사용하는데 알 필요 없습니다. 

[collapse]

뭐임 근데 detail.html 안의 내용은 똑같은데요 사기꾼인듯 

 

/detail.html?id=감자게시물id

/detail.html?id=카메라게시물id 

일로가나 절로가나 똑같이 detail.html안의 내용은 똑같습니다. 

HTML안에 대충 상품제목을 하드코딩해놨으니까요.

 

이게 마음에 안들면 님들이 이렇게 코드 짜면 되는 것임 

"query string에 기재된 게시물을 DB에서 찾아서 detail.html에 보여주셈"

지금 감자 페이지라면 감자 게시물을 DB에서 찾아서 가격, 제목 이런걸 가져오는 겁니다. 

감자 게시물을 DB에서 찾고 싶으면 게시물의 id만 알면 됩니다. 그건 url에 기입이 잘 되어있군요. 

그리고 그걸 HTML에 꽂아넣으면 끝이겠는데요 

Firestore Database 에서 게시물 하나 가져오는 법

게시물 하나를 찾고 싶으면 게시물의 id만 알면 됩니다. 

db.collection('product').doc(document의 id기입).get().then()
이렇게 쓰라고 하는군요.

현재 url에 있는 query string 알아내는 법 

var 쿼리스트링 = new URLSearchParams(window.location.search)
console.log( 쿼리스트링.get('id') )
이러면 된다고 하는군요.

이것만 알면 아까 말했던

"query string에 기재된 게시물을 DB에서 찾아서 detail.html에 보여주셈"

기능개발이 가능합니다.

var 쿼리스트링 = new URLSearchParams(window.location.search)
db.collection('product').doc(쿼리스트링.get('id')).get().then((result)=>{
  console.log(result.data())
}) 
이러면 detail 페이지 방문시 실제 그 게시물을 DB에서 찾아서 가져옵니다.

콘솔창에 출력도 해주는군요.

그럼 감자 페이지로 방문하면 감자 게시물의 제목, 가격이 html에 뜨도록 하려면 코드 어떻게 짜야할까요?