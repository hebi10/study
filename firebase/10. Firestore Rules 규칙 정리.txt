
규칙 새로 만드는 법 
 
match 경로 {
  allow read : if 규칙
}
이런 문법으로 작성해주면 됩니다. 

경로는 컬렉션과 document 이런걸 의미하는데

예를 들어서 product라는 컬렉션의 모든 문서의 접근권한을 정하고 싶으면 
 
match /product/{docid} {
  allow read : if 규칙
}
이런 문법으로 작성해주면 됩니다. 

{} 이건 모든 문서~ 를 뜻하는 키워드인데 그 안에는 자유롭게 아무거나 작명해주시면 됩니다. 
 
수정에 제한두기 
 
전 강의에서 수정요청하는 사람의 uid == 게시물에 저장된 uid 이 경우에만 수정가능하게 만들고 싶었잖습니까.

그걸 어떻게 표현하냐면 
 
match /product/{docid} {
  allow update : if 수정요청하는사람uid == 게시물에저장된uid
}
이런 문법으로 작성해주면 됩니다. 

수정요청하는 사람의 정보는 request 라는 변수에 들어가 있고

수정하려는 게시물에 대한 정보는 resource.data 라는 변수에 들어있습니다.

그래서 한글을 번역해보면 
 
match /product/{docid} {
  allow update : if request.auth.uid == resource.data.uid
}
끝

근데 request까지만 쓰고 점찍으면 자동완성 되어서 까먹어도 될듯 

request에는 이거 auth 말고도 method, time, query, resource 이런 여러 정보들이 담겨있고

resource에는 이거 data 말고도 id 이런게 담겨있는데 더 알고싶으면

https://firebase.google.com/docs/reference/rules/rules.firestore.Request 이걸 참고합니다.

 

request.resource 이건 많이 쓰는데 수정 요청하는 사람이 전달한 게시물이라고 보면 되겠습니다. 

request.auth 이것도 많이 쓰는데 수정 요청하는 사람의 로그인 정보가 다 담겨있습니다. 
 
match /product/{docid} {
  allow read : if true;
  allow update : if request.auth.uid == resource.data.uid;
}
그리고 /product 안의 document의 읽기요청은 누구나 할 수 있게 추가했습니다.

접근 방법은 총 5개가 있는데 
 
allow get : if 어쩌구
allow list : if 어쩌구
get은 딱 하나의 document,

list는 collection 안의 document들을 접근할 때

이렇게 따로도 규칙을 지정가능합니다. 

두개 싸잡아서 allow read 라고 표현할 수 있습니다.
 
allow create : if 어쩌구
allow update : if 어쩌구
allow delete : if 어쩌구
create는 새로운 게시물 추가

update는 수정

delete는 삭제

이럴 때 규칙을 따로 지정가능합니다. 

세개 싸잡아서 allow write 라고 표현할 수 있습니다. 
 
match /product/{docid} {
  allow read : if true;
  allow create : if request.auth != null;
  allow update : if request.auth.uid == resource.data.uid;
}
그래서 심심해서 create는 로그인한 사람만 할 수 있게 바꿔봤습니다. 
 
별표두개 입력하면 뺑뺑이 돌려줌 

 

match /{document=**} {
  allow read : if true
}
기본으로 입력되어있는 경로입니다. 

{} 이건 안의 모든 문서를 뜻한다고 했는데 (여기서는 모든 collection이기도 하겠네요)

근데 작명할 때 =** 이걸 뒤에 붙여주면 recursive라는 뜻이되어

하위경로까지 전부 계속 이걸 적용해주라는 뜻입니다.

그래서 저 경로는 모든 컬렉션과 파일을 의미한다고 보시면 되겠습니다. 

하위경로까지 전부 설정이 필요하면 =** 이걸 붙여보십시오. 
 
그래서 저건 잠깐 주석처리 해둡시다. 
  
규칙 중복발생시 주의
 
막 짜다보면 가끔 규칙에 중복이 발생합니다.
 
match /product/{docid} {
  allow read : if true;
}

match /product/{docid} {
  allow read : if false;
}
규칙을 이렇게 만들어놨다고 칩시다.

/product안에 document 하나를 read 하고싶은 경우

규칙 2개가 둘다 발동되어서 서로 상충하고 있군요.

 

이럴 경우 이것만 알면 됩니다

"규칙에서 중복이 발생하면 항상 관대하게 적용함"

그래서 적어도 하나의 규칙이 허락해준다고 하면 무조건 허락해줍니다. 

(그래서 위의 규칙은 누구나 read가 가능한 규칙입니다.)

그냥 그렇게 만들어져있습니다. 
 
그래서 왼쪽에 보면 규칙 플레이그라운드라는 메뉴가 있는데

뭔가 이상한 점이 생기면 거기서 항상 테스트해보시면 되겠습니다. 
 